import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

/*
TODO 
+ Make working bot
+ Fix using input number twice
+ Make user interface
+ standardize the different versions
+ remove unneeded code
+ convert arrays to array lists for consistency
+ remove make a standardized method for all different game versions to use to reduce project size
+ loop everything
+ add mode for playing against the bot
+ add in a tutorial (Rules/Guide will do if not enough time)
*/
public class Games {

	static void player(ArrayList<Integer> code) {

		int turn = 1;
		int skip = 1;

		while (1 == 1) {

			ArrayList<Integer> result = new ArrayList<Integer>();

			int[] bot = { 0, 0, 0, 0 };

			Scanner scan = new Scanner(System.in);

			System.out.println("input number");

			int pin = scan.nextInt();

			String number = String.valueOf(pin);
			for (int i = 0; i < number.length(); i++) {

				int j = Character.digit(number.charAt(i), 10);

				bot[i] = j;

				System.out.println("digit: " + j);
			}

			List<Integer> codetemp = new ArrayList<Integer>(code);

			// int[] bot = {1, 1, 2, 2};

			// all code below this point is cursed, and I have no idea how any
			// of it works. Good luck Future me
			// Checking if it matches exact position
			for (int i = 1; i < 5; i++) {

				if (codetemp.get(i - 1) == bot[i - 1]) {
					System.out.println("2");
					// code.set(i, 9);
					codetemp.set(codetemp.indexOf(bot[i - 1]), 9);
					result.add(2);
					skip = 1;
				}

			}
			// checks if it is in
			for (int i = 1; i < 5; i++) {

				if (codetemp.contains(bot[i - 1])) {

					System.out.println("1");
					codetemp.set(codetemp.indexOf(bot[i - 1]), 9);
					// code.set(i-1, 9);
					result.add(1);
					skip = 1;
				}

				System.out.println(result);
			}
			System.out.println(codetemp);
			while (result.size() != codetemp.size()) {

				result.add(0);

			}

			Collections.sort(result, Collections.reverseOrder());
			System.out.println(result);
			System.out.println(codetemp);
		}
	}

	static void bot(ArrayList<Integer> code) {

		int turn = 1;
		int skip = 1;
		int sum = 0;

		while (sum != (9 * 4)) {

			sum = 0;
			ArrayList<Integer> result = new ArrayList<Integer>();
			int[] bot = new int[4];

			// int[] bot = {0,0,0,0};

			Scanner scan = new Scanner(System.in);
			System.out.println("input number");
			int pin = scan.nextInt();
			String number = String.valueOf(pin);
			
			for (int i = 0; i < number.length(); i++) {
				
				int j = Character.digit(number.charAt(i), 10);
				bot[i] = j;
				System.out.println("digit: " + j);
			}

			List<Integer> codetemp = new ArrayList<Integer>(code);

		
			
			// all code below this point is cursed, and I have no idea how any
			// of it works. Good luck Future me
			// Checking if it matches exact position
			for (int i = 1; i < (5); i++) {

				if (codetemp.get(i - 1) == bot[i - 1]) {
					System.out.println("2");
					// code.set(i, 9);
					codetemp.set(codetemp.indexOf(bot[i - 1]), 9);
					result.add(2);
					skip = 1;
				}

			}
			// checks if it is in
			for (int i = 1; i < (5); i++) {

				if (codetemp.contains(bot[i - 1])) {

					System.out.println("1");
					codetemp.set(codetemp.indexOf(bot[i - 1]), 0);
					// code.set(i-1, 9);
					result.add(1);
					skip = 1;
				}

				System.out.println(result);
			}
			System.out.println(codetemp);
			while (result.size() != codetemp.size()) {

				result.add(0);

			}

			Collections.sort(result, Collections.reverseOrder());
			System.out.println(result);
			System.out.println(codetemp);

			for (int i = 0; i < codetemp.size(); i++)
				sum += codetemp.get(i);

		}

		System.out.println("you win!");
		main(null);
	}

	
	
	// Custom is the most updated version of the game
	static void custom(ArrayList<Integer> code, int length) { 

		int turn = 1;
		int skip = 1;
		int sum = 0;

		while (sum != (9 * length)) {

			sum = 0;

			ArrayList<Integer> result = new ArrayList<Integer>();

			int[] bot = new int[length];

			// old code
			// int[] bot = {0,0,0,0};

			Scanner scan = new Scanner(System.in);

			System.out.println("input number");

			int pin = scan.nextInt();

			String number = String.valueOf(pin);
			for (int i = 0; i < number.length(); i++) {

				int j = Character.digit(number.charAt(i), 10);

				bot[i] = j;

				System.out.println("digit: " + j);
			}

			List<Integer> codetemp = new ArrayList<Integer>(code);

			// int[] bot = {1, 1, 2, 2};

			// all code below this point is cursed, and I have no idea how any
			// of it works. Good luck Future me
			// Checking if it matches exact position

			// For future me: bug is caused by it checking if code contains a
			// number regardless of position, and because the incorrect numbers
			// do not get swapped, when there is duplicates it will cause it to
			// reuse a number twice for both exact and included numbers.
			for (int i = 1; i < (length + 1); i++) {

				if (codetemp.get(i - 1) == bot[i - 1]) {
					System.out.println("2");
					// code.set(i, 9);
					codetemp.set(codetemp.indexOf(bot[i - 1]), 9);
					result.add(2);
					skip = 1;
					System.out.println(codetemp);
				}

			}
			// checks if it is in
			for (int i = 1; i < (length + 1); i++) {

				System.out.println("Round: " + i);
				System.out.println("Guess: " + bot[i - 1]);
				System.out.println("Checker: " + codetemp);
				System.out.println("");

				if (codetemp.contains(bot[i - 1])) {

					System.out.println("Contains? : Yes");
					codetemp.set(codetemp.indexOf(bot[i - 1]), 0);
					// code.set(i-1, 9);
					result.add(1);
					skip = 1;

				} else {

					System.out.println("Contains? : False");
					System.out.println("");

				}

				System.out.println(result);
			}
			System.out.println(codetemp);
			while (result.size() != codetemp.size()) {

				result.add(0);

			}

			Collections.sort(result, Collections.reverseOrder());
			System.out.println(result);
			System.out.println(codetemp);

			for (int i = 0; i < codetemp.size(); i++)
				sum += codetemp.get(i);

		}

		System.out.println("you win!");
		main(null);
	}

	static void codegen(int mode) {

		Scanner scan = new Scanner(System.in);
		Random rand = new Random();

		if (mode == 1) {

			int length = scan.nextInt();
			ArrayList<Integer> code = new ArrayList<Integer>();

			for (int i = 0; i < length; i++) {

				code.add(rand.nextInt(8) + 1);
				System.out.println(code);

			}

			custom(code, length);

		}

		if (mode == 2) {

			ArrayList<Integer> code = new ArrayList<Integer>();

			for (int i = 0; i < 4; i++) {
				code.add(rand.nextInt(8) + 1);
				System.out.println(code);
			}

			bot(code);

		}

		if (mode == 3) {

			ArrayList<Integer> code = new ArrayList<Integer>();

			for (int i = 0; i < 4; i++) {
				code.add(rand.nextInt(8) + 1);
				System.out.println(code);
			}

			player(code);

		}
	}

	public static void main(String[] args) {

		int mode;

		Scanner scan = new Scanner(System.in);

		System.out.println("Mode");

		mode = scan.nextInt();

		if (mode == 1 || mode == 2 || mode == 3) {

		} else {

			while (mode != 1 && mode != 2 && mode != 3) {
				System.out.println("Input");
				mode = scan.nextInt();

			}

		}

		codegen(mode);

	}

}
